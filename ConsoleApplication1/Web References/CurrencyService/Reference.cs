//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17626
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17626.
// 
#pragma warning disable 1591

namespace ConsoleApplication1.CurrencyService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="countrySoap", Namespace="http://www.webserviceX.NET")]
    public partial class country : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCountryByCountryCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetISDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyCodeByCurrencyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetISOCountryCodeByCountyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountryByCurrencyCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrenciesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrencyByCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGMTbyCountryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public country() {
            this.Url = global::ConsoleApplication1.Properties.Settings.Default.ConsoleApplication1_CurrencyService_country;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCountryByCountryCodeCompletedEventHandler GetCountryByCountryCodeCompleted;
        
        /// <remarks/>
        public event GetISDCompletedEventHandler GetISDCompleted;
        
        /// <remarks/>
        public event GetCountriesCompletedEventHandler GetCountriesCompleted;
        
        /// <remarks/>
        public event GetCurrencyCodeByCurrencyNameCompletedEventHandler GetCurrencyCodeByCurrencyNameCompleted;
        
        /// <remarks/>
        public event GetISOCountryCodeByCountyNameCompletedEventHandler GetISOCountryCodeByCountyNameCompleted;
        
        /// <remarks/>
        public event GetCurrencyCodeCompletedEventHandler GetCurrencyCodeCompleted;
        
        /// <remarks/>
        public event GetCountryByCurrencyCodeCompletedEventHandler GetCountryByCurrencyCodeCompleted;
        
        /// <remarks/>
        public event GetCurrenciesCompletedEventHandler GetCurrenciesCompleted;
        
        /// <remarks/>
        public event GetCurrencyByCountryCompletedEventHandler GetCurrencyByCountryCompleted;
        
        /// <remarks/>
        public event GetGMTbyCountryCompletedEventHandler GetGMTbyCountryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetCountryByCountryCode", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCountryByCountryCode(string CountryCode) {
            object[] results = this.Invoke("GetCountryByCountryCode", new object[] {
                        CountryCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryByCountryCodeAsync(string CountryCode) {
            this.GetCountryByCountryCodeAsync(CountryCode, null);
        }
        
        /// <remarks/>
        public void GetCountryByCountryCodeAsync(string CountryCode, object userState) {
            if ((this.GetCountryByCountryCodeOperationCompleted == null)) {
                this.GetCountryByCountryCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryByCountryCodeOperationCompleted);
            }
            this.InvokeAsync("GetCountryByCountryCode", new object[] {
                        CountryCode}, this.GetCountryByCountryCodeOperationCompleted, userState);
        }
        
        private void OnGetCountryByCountryCodeOperationCompleted(object arg) {
            if ((this.GetCountryByCountryCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryByCountryCodeCompleted(this, new GetCountryByCountryCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetISD", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetISD(string CountryName) {
            object[] results = this.Invoke("GetISD", new object[] {
                        CountryName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetISDAsync(string CountryName) {
            this.GetISDAsync(CountryName, null);
        }
        
        /// <remarks/>
        public void GetISDAsync(string CountryName, object userState) {
            if ((this.GetISDOperationCompleted == null)) {
                this.GetISDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetISDOperationCompleted);
            }
            this.InvokeAsync("GetISD", new object[] {
                        CountryName}, this.GetISDOperationCompleted, userState);
        }
        
        private void OnGetISDOperationCompleted(object arg) {
            if ((this.GetISDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetISDCompleted(this, new GetISDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetCountries", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCountries() {
            object[] results = this.Invoke("GetCountries", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountriesAsync() {
            this.GetCountriesAsync(null);
        }
        
        /// <remarks/>
        public void GetCountriesAsync(object userState) {
            if ((this.GetCountriesOperationCompleted == null)) {
                this.GetCountriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountriesOperationCompleted);
            }
            this.InvokeAsync("GetCountries", new object[0], this.GetCountriesOperationCompleted, userState);
        }
        
        private void OnGetCountriesOperationCompleted(object arg) {
            if ((this.GetCountriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountriesCompleted(this, new GetCountriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetCurrencyCodeByCurrencyName", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrencyCodeByCurrencyName(string CurrencyName) {
            object[] results = this.Invoke("GetCurrencyCodeByCurrencyName", new object[] {
                        CurrencyName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyCodeByCurrencyNameAsync(string CurrencyName) {
            this.GetCurrencyCodeByCurrencyNameAsync(CurrencyName, null);
        }
        
        /// <remarks/>
        public void GetCurrencyCodeByCurrencyNameAsync(string CurrencyName, object userState) {
            if ((this.GetCurrencyCodeByCurrencyNameOperationCompleted == null)) {
                this.GetCurrencyCodeByCurrencyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyCodeByCurrencyNameOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyCodeByCurrencyName", new object[] {
                        CurrencyName}, this.GetCurrencyCodeByCurrencyNameOperationCompleted, userState);
        }
        
        private void OnGetCurrencyCodeByCurrencyNameOperationCompleted(object arg) {
            if ((this.GetCurrencyCodeByCurrencyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyCodeByCurrencyNameCompleted(this, new GetCurrencyCodeByCurrencyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetISOCountryCodeByCountyName", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetISOCountryCodeByCountyName(string CountryName) {
            object[] results = this.Invoke("GetISOCountryCodeByCountyName", new object[] {
                        CountryName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetISOCountryCodeByCountyNameAsync(string CountryName) {
            this.GetISOCountryCodeByCountyNameAsync(CountryName, null);
        }
        
        /// <remarks/>
        public void GetISOCountryCodeByCountyNameAsync(string CountryName, object userState) {
            if ((this.GetISOCountryCodeByCountyNameOperationCompleted == null)) {
                this.GetISOCountryCodeByCountyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetISOCountryCodeByCountyNameOperationCompleted);
            }
            this.InvokeAsync("GetISOCountryCodeByCountyName", new object[] {
                        CountryName}, this.GetISOCountryCodeByCountyNameOperationCompleted, userState);
        }
        
        private void OnGetISOCountryCodeByCountyNameOperationCompleted(object arg) {
            if ((this.GetISOCountryCodeByCountyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetISOCountryCodeByCountyNameCompleted(this, new GetISOCountryCodeByCountyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetCurrencyCode", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrencyCode() {
            object[] results = this.Invoke("GetCurrencyCode", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyCodeAsync() {
            this.GetCurrencyCodeAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrencyCodeAsync(object userState) {
            if ((this.GetCurrencyCodeOperationCompleted == null)) {
                this.GetCurrencyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyCodeOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyCode", new object[0], this.GetCurrencyCodeOperationCompleted, userState);
        }
        
        private void OnGetCurrencyCodeOperationCompleted(object arg) {
            if ((this.GetCurrencyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyCodeCompleted(this, new GetCurrencyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetCountryByCurrencyCode", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCountryByCurrencyCode(string CurrencyCode) {
            object[] results = this.Invoke("GetCountryByCurrencyCode", new object[] {
                        CurrencyCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountryByCurrencyCodeAsync(string CurrencyCode) {
            this.GetCountryByCurrencyCodeAsync(CurrencyCode, null);
        }
        
        /// <remarks/>
        public void GetCountryByCurrencyCodeAsync(string CurrencyCode, object userState) {
            if ((this.GetCountryByCurrencyCodeOperationCompleted == null)) {
                this.GetCountryByCurrencyCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountryByCurrencyCodeOperationCompleted);
            }
            this.InvokeAsync("GetCountryByCurrencyCode", new object[] {
                        CurrencyCode}, this.GetCountryByCurrencyCodeOperationCompleted, userState);
        }
        
        private void OnGetCountryByCurrencyCodeOperationCompleted(object arg) {
            if ((this.GetCountryByCurrencyCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountryByCurrencyCodeCompleted(this, new GetCountryByCurrencyCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetCurrencies", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrencies() {
            object[] results = this.Invoke("GetCurrencies", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrenciesAsync() {
            this.GetCurrenciesAsync(null);
        }
        
        /// <remarks/>
        public void GetCurrenciesAsync(object userState) {
            if ((this.GetCurrenciesOperationCompleted == null)) {
                this.GetCurrenciesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrenciesOperationCompleted);
            }
            this.InvokeAsync("GetCurrencies", new object[0], this.GetCurrenciesOperationCompleted, userState);
        }
        
        private void OnGetCurrenciesOperationCompleted(object arg) {
            if ((this.GetCurrenciesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrenciesCompleted(this, new GetCurrenciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetCurrencyByCountry", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCurrencyByCountry(string CountryName) {
            object[] results = this.Invoke("GetCurrencyByCountry", new object[] {
                        CountryName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrencyByCountryAsync(string CountryName) {
            this.GetCurrencyByCountryAsync(CountryName, null);
        }
        
        /// <remarks/>
        public void GetCurrencyByCountryAsync(string CountryName, object userState) {
            if ((this.GetCurrencyByCountryOperationCompleted == null)) {
                this.GetCurrencyByCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrencyByCountryOperationCompleted);
            }
            this.InvokeAsync("GetCurrencyByCountry", new object[] {
                        CountryName}, this.GetCurrencyByCountryOperationCompleted, userState);
        }
        
        private void OnGetCurrencyByCountryOperationCompleted(object arg) {
            if ((this.GetCurrencyByCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrencyByCountryCompleted(this, new GetCurrencyByCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetGMTbyCountry", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGMTbyCountry(string CountryName) {
            object[] results = this.Invoke("GetGMTbyCountry", new object[] {
                        CountryName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGMTbyCountryAsync(string CountryName) {
            this.GetGMTbyCountryAsync(CountryName, null);
        }
        
        /// <remarks/>
        public void GetGMTbyCountryAsync(string CountryName, object userState) {
            if ((this.GetGMTbyCountryOperationCompleted == null)) {
                this.GetGMTbyCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGMTbyCountryOperationCompleted);
            }
            this.InvokeAsync("GetGMTbyCountry", new object[] {
                        CountryName}, this.GetGMTbyCountryOperationCompleted, userState);
        }
        
        private void OnGetGMTbyCountryOperationCompleted(object arg) {
            if ((this.GetGMTbyCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGMTbyCountryCompleted(this, new GetGMTbyCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    public delegate void GetCountryByCountryCodeCompletedEventHandler(object sender, GetCountryByCountryCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryByCountryCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryByCountryCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    public delegate void GetISDCompletedEventHandler(object sender, GetISDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetISDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetISDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    public delegate void GetCountriesCompletedEventHandler(object sender, GetCountriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    public delegate void GetCurrencyCodeByCurrencyNameCompletedEventHandler(object sender, GetCurrencyCodeByCurrencyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyCodeByCurrencyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyCodeByCurrencyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    public delegate void GetISOCountryCodeByCountyNameCompletedEventHandler(object sender, GetISOCountryCodeByCountyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetISOCountryCodeByCountyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetISOCountryCodeByCountyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    public delegate void GetCurrencyCodeCompletedEventHandler(object sender, GetCurrencyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    public delegate void GetCountryByCurrencyCodeCompletedEventHandler(object sender, GetCountryByCurrencyCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountryByCurrencyCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountryByCurrencyCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    public delegate void GetCurrenciesCompletedEventHandler(object sender, GetCurrenciesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrenciesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrenciesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    public delegate void GetCurrencyByCountryCompletedEventHandler(object sender, GetCurrencyByCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrencyByCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrencyByCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    public delegate void GetGMTbyCountryCompletedEventHandler(object sender, GetGMTbyCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17626")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGMTbyCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGMTbyCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591